#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestOMatic2012
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DataAnalysis")]
	public partial class DataAnalysis2DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBadOrderItem(BadOrderItem instance);
    partial void UpdateBadOrderItem(BadOrderItem instance);
    partial void DeleteBadOrderItem(BadOrderItem instance);
    partial void InsertMixDestPollItem(MixDestPollItem instance);
    partial void UpdateMixDestPollItem(MixDestPollItem instance);
    partial void DeleteMixDestPollItem(MixDestPollItem instance);
    partial void InsertMixDestPollFile(MixDestPollFile instance);
    partial void UpdateMixDestPollFile(MixDestPollFile instance);
    partial void DeleteMixDestPollFile(MixDestPollFile instance);
    partial void InsertItemCategory(ItemCategory instance);
    partial void UpdateItemCategory(ItemCategory instance);
    partial void DeleteItemCategory(ItemCategory instance);
    partial void InsertMixCategoryItemXref(MixCategoryItemXref instance);
    partial void UpdateMixCategoryItemXref(MixCategoryItemXref instance);
    partial void DeleteMixCategoryItemXref(MixCategoryItemXref instance);
    partial void InsertDataWarehouseGBItem(DataWarehouseGBItem instance);
    partial void UpdateDataWarehouseGBItem(DataWarehouseGBItem instance);
    partial void DeleteDataWarehouseGBItem(DataWarehouseGBItem instance);
    partial void InsertCatItemXref(CatItemXref instance);
    partial void UpdateCatItemXref(CatItemXref instance);
    partial void DeleteCatItemXref(CatItemXref instance);
    partial void InsertHardeesProduct(HardeesProduct instance);
    partial void UpdateHardeesProduct(HardeesProduct instance);
    partial void DeleteHardeesProduct(HardeesProduct instance);
    partial void InsertHardeesProductWarehouse(HardeesProductWarehouse instance);
    partial void UpdateHardeesProductWarehouse(HardeesProductWarehouse instance);
    partial void DeleteHardeesProductWarehouse(HardeesProductWarehouse instance);
    partial void InsertHardeesWarehouse(HardeesWarehouse instance);
    partial void UpdateHardeesWarehouse(HardeesWarehouse instance);
    partial void DeleteHardeesWarehouse(HardeesWarehouse instance);
    partial void InsertHardeesProductII(HardeesProductII instance);
    partial void UpdateHardeesProductII(HardeesProductII instance);
    partial void DeleteHardeesProductII(HardeesProductII instance);
    partial void InsertRecipedItem(RecipedItem instance);
    partial void UpdateRecipedItem(RecipedItem instance);
    partial void DeleteRecipedItem(RecipedItem instance);
    #endregion
		
		public DataAnalysis2DataContext() : 
				base(global::TestOMatic2012.Properties.Settings.Default.DataAnalysisConnectionString4, mappingSource)
		{
			OnCreated();
		}
		
		public DataAnalysis2DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataAnalysis2DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataAnalysis2DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataAnalysis2DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BadOrderItem> BadOrderItems
		{
			get
			{
				return this.GetTable<BadOrderItem>();
			}
		}
		
		public System.Data.Linq.Table<MixDestPollItem> MixDestPollItems
		{
			get
			{
				return this.GetTable<MixDestPollItem>();
			}
		}
		
		public System.Data.Linq.Table<MixDestPollFile> MixDestPollFiles
		{
			get
			{
				return this.GetTable<MixDestPollFile>();
			}
		}
		
		public System.Data.Linq.Table<ItemCategory> ItemCategories
		{
			get
			{
				return this.GetTable<ItemCategory>();
			}
		}
		
		public System.Data.Linq.Table<MixCategoryItemXref> MixCategoryItemXrefs
		{
			get
			{
				return this.GetTable<MixCategoryItemXref>();
			}
		}
		
		public System.Data.Linq.Table<DataWarehouseGBItem> DataWarehouseGBItems
		{
			get
			{
				return this.GetTable<DataWarehouseGBItem>();
			}
		}
		
		public System.Data.Linq.Table<CatItemXref> CatItemXrefs
		{
			get
			{
				return this.GetTable<CatItemXref>();
			}
		}
		
		public System.Data.Linq.Table<HardeesProduct> HardeesProducts
		{
			get
			{
				return this.GetTable<HardeesProduct>();
			}
		}
		
		public System.Data.Linq.Table<HardeesProductWarehouse> HardeesProductWarehouses
		{
			get
			{
				return this.GetTable<HardeesProductWarehouse>();
			}
		}
		
		public System.Data.Linq.Table<HardeesWarehouse> HardeesWarehouses
		{
			get
			{
				return this.GetTable<HardeesWarehouse>();
			}
		}
		
		public System.Data.Linq.Table<HardeesProductII> HardeesProductIIs
		{
			get
			{
				return this.GetTable<HardeesProductII>();
			}
		}
		
		public System.Data.Linq.Table<RecipedItem> RecipedItems
		{
			get
			{
				return this.GetTable<RecipedItem>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BadOrderItems")]
	public partial class BadOrderItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RecordId;
		
		private int _MenuItemId;
		
		private int _RestaurantNo;
		
		private int _OrderId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRecordIdChanging(int value);
    partial void OnRecordIdChanged();
    partial void OnMenuItemIdChanging(int value);
    partial void OnMenuItemIdChanged();
    partial void OnRestaurantNoChanging(int value);
    partial void OnRestaurantNoChanged();
    partial void OnOrderIdChanging(int value);
    partial void OnOrderIdChanged();
    #endregion
		
		public BadOrderItem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RecordId
		{
			get
			{
				return this._RecordId;
			}
			set
			{
				if ((this._RecordId != value))
				{
					this.OnRecordIdChanging(value);
					this.SendPropertyChanging();
					this._RecordId = value;
					this.SendPropertyChanged("RecordId");
					this.OnRecordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuItemId", DbType="Int NOT NULL")]
		public int MenuItemId
		{
			get
			{
				return this._MenuItemId;
			}
			set
			{
				if ((this._MenuItemId != value))
				{
					this.OnMenuItemIdChanging(value);
					this.SendPropertyChanging();
					this._MenuItemId = value;
					this.SendPropertyChanged("MenuItemId");
					this.OnMenuItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RestaurantNo", DbType="Int NOT NULL")]
		public int RestaurantNo
		{
			get
			{
				return this._RestaurantNo;
			}
			set
			{
				if ((this._RestaurantNo != value))
				{
					this.OnRestaurantNoChanging(value);
					this.SendPropertyChanging();
					this._RestaurantNo = value;
					this.SendPropertyChanged("RestaurantNo");
					this.OnRestaurantNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="Int NOT NULL")]
		public int OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MixDestPollItem")]
	public partial class MixDestPollItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MixDestPollItemId;
		
		private int _MixDestPollFileId;
		
		private string _ItemNumber;
		
		private decimal _Quantity;
		
		private decimal _Price;
		
		private EntityRef<MixDestPollFile> _MixDestPollFile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMixDestPollItemIdChanging(int value);
    partial void OnMixDestPollItemIdChanged();
    partial void OnMixDestPollFileIdChanging(int value);
    partial void OnMixDestPollFileIdChanged();
    partial void OnItemNumberChanging(string value);
    partial void OnItemNumberChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    #endregion
		
		public MixDestPollItem()
		{
			this._MixDestPollFile = default(EntityRef<MixDestPollFile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MixDestPollItemId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MixDestPollItemId
		{
			get
			{
				return this._MixDestPollItemId;
			}
			set
			{
				if ((this._MixDestPollItemId != value))
				{
					this.OnMixDestPollItemIdChanging(value);
					this.SendPropertyChanging();
					this._MixDestPollItemId = value;
					this.SendPropertyChanged("MixDestPollItemId");
					this.OnMixDestPollItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MixDestPollFileId", DbType="Int NOT NULL")]
		public int MixDestPollFileId
		{
			get
			{
				return this._MixDestPollFileId;
			}
			set
			{
				if ((this._MixDestPollFileId != value))
				{
					if (this._MixDestPollFile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMixDestPollFileIdChanging(value);
					this.SendPropertyChanging();
					this._MixDestPollFileId = value;
					this.SendPropertyChanged("MixDestPollFileId");
					this.OnMixDestPollFileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ItemNumber
		{
			get
			{
				return this._ItemNumber;
			}
			set
			{
				if ((this._ItemNumber != value))
				{
					this.OnItemNumberChanging(value);
					this.SendPropertyChanging();
					this._ItemNumber = value;
					this.SendPropertyChanged("ItemNumber");
					this.OnItemNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,2) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,2) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MixDestPollFile_MixDestPollItem", Storage="_MixDestPollFile", ThisKey="MixDestPollFileId", OtherKey="MixDestPollFileId", IsForeignKey=true)]
		public MixDestPollFile MixDestPollFile
		{
			get
			{
				return this._MixDestPollFile.Entity;
			}
			set
			{
				MixDestPollFile previousValue = this._MixDestPollFile.Entity;
				if (((previousValue != value) 
							|| (this._MixDestPollFile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MixDestPollFile.Entity = null;
						previousValue.MixDestPollItems.Remove(this);
					}
					this._MixDestPollFile.Entity = value;
					if ((value != null))
					{
						value.MixDestPollItems.Add(this);
						this._MixDestPollFileId = value.MixDestPollFileId;
					}
					else
					{
						this._MixDestPollFileId = default(int);
					}
					this.SendPropertyChanged("MixDestPollFile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MixDestPollFile")]
	public partial class MixDestPollFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MixDestPollFileId;
		
		private string _UnitNumber;
		
		private string _FileName;
		
		private System.DateTime _FileDate;
		
		private EntitySet<MixDestPollItem> _MixDestPollItems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMixDestPollFileIdChanging(int value);
    partial void OnMixDestPollFileIdChanged();
    partial void OnUnitNumberChanging(string value);
    partial void OnUnitNumberChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnFileDateChanging(System.DateTime value);
    partial void OnFileDateChanged();
    #endregion
		
		public MixDestPollFile()
		{
			this._MixDestPollItems = new EntitySet<MixDestPollItem>(new Action<MixDestPollItem>(this.attach_MixDestPollItems), new Action<MixDestPollItem>(this.detach_MixDestPollItems));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MixDestPollFileId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MixDestPollFileId
		{
			get
			{
				return this._MixDestPollFileId;
			}
			set
			{
				if ((this._MixDestPollFileId != value))
				{
					this.OnMixDestPollFileIdChanging(value);
					this.SendPropertyChanging();
					this._MixDestPollFileId = value;
					this.SendPropertyChanged("MixDestPollFileId");
					this.OnMixDestPollFileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UnitNumber
		{
			get
			{
				return this._UnitNumber;
			}
			set
			{
				if ((this._UnitNumber != value))
				{
					this.OnUnitNumberChanging(value);
					this.SendPropertyChanging();
					this._UnitNumber = value;
					this.SendPropertyChanged("UnitNumber");
					this.OnUnitNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileDate", DbType="DateTime NOT NULL")]
		public System.DateTime FileDate
		{
			get
			{
				return this._FileDate;
			}
			set
			{
				if ((this._FileDate != value))
				{
					this.OnFileDateChanging(value);
					this.SendPropertyChanging();
					this._FileDate = value;
					this.SendPropertyChanged("FileDate");
					this.OnFileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MixDestPollFile_MixDestPollItem", Storage="_MixDestPollItems", ThisKey="MixDestPollFileId", OtherKey="MixDestPollFileId")]
		public EntitySet<MixDestPollItem> MixDestPollItems
		{
			get
			{
				return this._MixDestPollItems;
			}
			set
			{
				this._MixDestPollItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MixDestPollItems(MixDestPollItem entity)
		{
			this.SendPropertyChanging();
			entity.MixDestPollFile = this;
		}
		
		private void detach_MixDestPollItems(MixDestPollItem entity)
		{
			this.SendPropertyChanging();
			entity.MixDestPollFile = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ItemCategory")]
	public partial class ItemCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemCategoryId;
		
		private string _CategoryName;
		
		private EntitySet<MixCategoryItemXref> _MixCategoryItemXrefs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemCategoryIdChanging(int value);
    partial void OnItemCategoryIdChanged();
    partial void OnCategoryNameChanging(string value);
    partial void OnCategoryNameChanged();
    #endregion
		
		public ItemCategory()
		{
			this._MixCategoryItemXrefs = new EntitySet<MixCategoryItemXref>(new Action<MixCategoryItemXref>(this.attach_MixCategoryItemXrefs), new Action<MixCategoryItemXref>(this.detach_MixCategoryItemXrefs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemCategoryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ItemCategoryId
		{
			get
			{
				return this._ItemCategoryId;
			}
			set
			{
				if ((this._ItemCategoryId != value))
				{
					this.OnItemCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._ItemCategoryId = value;
					this.SendPropertyChanged("ItemCategoryId");
					this.OnItemCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CategoryName
		{
			get
			{
				return this._CategoryName;
			}
			set
			{
				if ((this._CategoryName != value))
				{
					this.OnCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._CategoryName = value;
					this.SendPropertyChanged("CategoryName");
					this.OnCategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemCategory_MixCategoryItemXref", Storage="_MixCategoryItemXrefs", ThisKey="ItemCategoryId", OtherKey="ItemCategoryId")]
		public EntitySet<MixCategoryItemXref> MixCategoryItemXrefs
		{
			get
			{
				return this._MixCategoryItemXrefs;
			}
			set
			{
				this._MixCategoryItemXrefs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MixCategoryItemXrefs(MixCategoryItemXref entity)
		{
			this.SendPropertyChanging();
			entity.ItemCategory = this;
		}
		
		private void detach_MixCategoryItemXrefs(MixCategoryItemXref entity)
		{
			this.SendPropertyChanging();
			entity.ItemCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MixCategoryItemXref")]
	public partial class MixCategoryItemXref : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MixItemCategoryXrefId;
		
		private int _ItemCategoryId;
		
		private string _ItemNumber;
		
		private EntityRef<ItemCategory> _ItemCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMixItemCategoryXrefIdChanging(int value);
    partial void OnMixItemCategoryXrefIdChanged();
    partial void OnItemCategoryIdChanging(int value);
    partial void OnItemCategoryIdChanged();
    partial void OnItemNumberChanging(string value);
    partial void OnItemNumberChanged();
    #endregion
		
		public MixCategoryItemXref()
		{
			this._ItemCategory = default(EntityRef<ItemCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MixItemCategoryXrefId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MixItemCategoryXrefId
		{
			get
			{
				return this._MixItemCategoryXrefId;
			}
			set
			{
				if ((this._MixItemCategoryXrefId != value))
				{
					this.OnMixItemCategoryXrefIdChanging(value);
					this.SendPropertyChanging();
					this._MixItemCategoryXrefId = value;
					this.SendPropertyChanged("MixItemCategoryXrefId");
					this.OnMixItemCategoryXrefIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemCategoryId", DbType="Int NOT NULL")]
		public int ItemCategoryId
		{
			get
			{
				return this._ItemCategoryId;
			}
			set
			{
				if ((this._ItemCategoryId != value))
				{
					if (this._ItemCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._ItemCategoryId = value;
					this.SendPropertyChanged("ItemCategoryId");
					this.OnItemCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ItemNumber
		{
			get
			{
				return this._ItemNumber;
			}
			set
			{
				if ((this._ItemNumber != value))
				{
					this.OnItemNumberChanging(value);
					this.SendPropertyChanging();
					this._ItemNumber = value;
					this.SendPropertyChanged("ItemNumber");
					this.OnItemNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemCategory_MixCategoryItemXref", Storage="_ItemCategory", ThisKey="ItemCategoryId", OtherKey="ItemCategoryId", IsForeignKey=true)]
		public ItemCategory ItemCategory
		{
			get
			{
				return this._ItemCategory.Entity;
			}
			set
			{
				ItemCategory previousValue = this._ItemCategory.Entity;
				if (((previousValue != value) 
							|| (this._ItemCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ItemCategory.Entity = null;
						previousValue.MixCategoryItemXrefs.Remove(this);
					}
					this._ItemCategory.Entity = value;
					if ((value != null))
					{
						value.MixCategoryItemXrefs.Add(this);
						this._ItemCategoryId = value.ItemCategoryId;
					}
					else
					{
						this._ItemCategoryId = default(int);
					}
					this.SendPropertyChanged("ItemCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DataWarehouseGBItem")]
	public partial class DataWarehouseGBItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DataWarehouseGBItemId;
		
		private string _ItemNumber;
		
		private string _Description;
		
		private string _Category;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDataWarehouseGBItemIdChanging(int value);
    partial void OnDataWarehouseGBItemIdChanged();
    partial void OnItemNumberChanging(string value);
    partial void OnItemNumberChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    #endregion
		
		public DataWarehouseGBItem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataWarehouseGBItemId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DataWarehouseGBItemId
		{
			get
			{
				return this._DataWarehouseGBItemId;
			}
			set
			{
				if ((this._DataWarehouseGBItemId != value))
				{
					this.OnDataWarehouseGBItemIdChanging(value);
					this.SendPropertyChanging();
					this._DataWarehouseGBItemId = value;
					this.SendPropertyChanged("DataWarehouseGBItemId");
					this.OnDataWarehouseGBItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ItemNumber
		{
			get
			{
				return this._ItemNumber;
			}
			set
			{
				if ((this._ItemNumber != value))
				{
					this.OnItemNumberChanging(value);
					this.SendPropertyChanging();
					this._ItemNumber = value;
					this.SendPropertyChanged("ItemNumber");
					this.OnItemNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatItemXref")]
	public partial class CatItemXref : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CatItemXrefId;
		
		private string _ItemNumber;
		
		private string _ItemDescription;
		
		private string _CategoryId;
		
		private string _CategoryName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCatItemXrefIdChanging(int value);
    partial void OnCatItemXrefIdChanged();
    partial void OnItemNumberChanging(string value);
    partial void OnItemNumberChanged();
    partial void OnItemDescriptionChanging(string value);
    partial void OnItemDescriptionChanged();
    partial void OnCategoryIdChanging(string value);
    partial void OnCategoryIdChanged();
    partial void OnCategoryNameChanging(string value);
    partial void OnCategoryNameChanged();
    #endregion
		
		public CatItemXref()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatItemXrefId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CatItemXrefId
		{
			get
			{
				return this._CatItemXrefId;
			}
			set
			{
				if ((this._CatItemXrefId != value))
				{
					this.OnCatItemXrefIdChanging(value);
					this.SendPropertyChanging();
					this._CatItemXrefId = value;
					this.SendPropertyChanged("CatItemXrefId");
					this.OnCatItemXrefIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ItemNumber
		{
			get
			{
				return this._ItemNumber;
			}
			set
			{
				if ((this._ItemNumber != value))
				{
					this.OnItemNumberChanging(value);
					this.SendPropertyChanging();
					this._ItemNumber = value;
					this.SendPropertyChanged("ItemNumber");
					this.OnItemNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemDescription", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ItemDescription
		{
			get
			{
				return this._ItemDescription;
			}
			set
			{
				if ((this._ItemDescription != value))
				{
					this.OnItemDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ItemDescription = value;
					this.SendPropertyChanged("ItemDescription");
					this.OnItemDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CategoryName
		{
			get
			{
				return this._CategoryName;
			}
			set
			{
				if ((this._CategoryName != value))
				{
					this.OnCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._CategoryName = value;
					this.SendPropertyChanged("CategoryName");
					this.OnCategoryNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HardeesProduct")]
	public partial class HardeesProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HardeesProductId;
		
		private string _ProductNumber;
		
		private string _Description;
		
		private string _UnitOfMeasure;
		
		private string _AltUnitOfMeasure;
		
		private decimal _ActualConversionFactor;
		
		private decimal _IdealConversionFactor;
		
		private string _StorageCode;
		
		private string _CategoryCode;
		
		private string _ActiveCode;
		
		private string _ParentProductNumber;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHardeesProductIdChanging(int value);
    partial void OnHardeesProductIdChanged();
    partial void OnProductNumberChanging(string value);
    partial void OnProductNumberChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnUnitOfMeasureChanging(string value);
    partial void OnUnitOfMeasureChanged();
    partial void OnAltUnitOfMeasureChanging(string value);
    partial void OnAltUnitOfMeasureChanged();
    partial void OnActualConversionFactorChanging(decimal value);
    partial void OnActualConversionFactorChanged();
    partial void OnIdealConversionFactorChanging(decimal value);
    partial void OnIdealConversionFactorChanged();
    partial void OnStorageCodeChanging(string value);
    partial void OnStorageCodeChanged();
    partial void OnCategoryCodeChanging(string value);
    partial void OnCategoryCodeChanged();
    partial void OnActiveCodeChanging(string value);
    partial void OnActiveCodeChanged();
    partial void OnParentProductNumberChanging(string value);
    partial void OnParentProductNumberChanged();
    #endregion
		
		public HardeesProduct()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardeesProductId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HardeesProductId
		{
			get
			{
				return this._HardeesProductId;
			}
			set
			{
				if ((this._HardeesProductId != value))
				{
					this.OnHardeesProductIdChanging(value);
					this.SendPropertyChanging();
					this._HardeesProductId = value;
					this.SendPropertyChanged("HardeesProductId");
					this.OnHardeesProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProductNumber
		{
			get
			{
				return this._ProductNumber;
			}
			set
			{
				if ((this._ProductNumber != value))
				{
					this.OnProductNumberChanging(value);
					this.SendPropertyChanging();
					this._ProductNumber = value;
					this.SendPropertyChanged("ProductNumber");
					this.OnProductNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitOfMeasure", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		public string UnitOfMeasure
		{
			get
			{
				return this._UnitOfMeasure;
			}
			set
			{
				if ((this._UnitOfMeasure != value))
				{
					this.OnUnitOfMeasureChanging(value);
					this.SendPropertyChanging();
					this._UnitOfMeasure = value;
					this.SendPropertyChanged("UnitOfMeasure");
					this.OnUnitOfMeasureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AltUnitOfMeasure", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		public string AltUnitOfMeasure
		{
			get
			{
				return this._AltUnitOfMeasure;
			}
			set
			{
				if ((this._AltUnitOfMeasure != value))
				{
					this.OnAltUnitOfMeasureChanging(value);
					this.SendPropertyChanging();
					this._AltUnitOfMeasure = value;
					this.SendPropertyChanged("AltUnitOfMeasure");
					this.OnAltUnitOfMeasureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualConversionFactor", DbType="Decimal(18,8) NOT NULL")]
		public decimal ActualConversionFactor
		{
			get
			{
				return this._ActualConversionFactor;
			}
			set
			{
				if ((this._ActualConversionFactor != value))
				{
					this.OnActualConversionFactorChanging(value);
					this.SendPropertyChanging();
					this._ActualConversionFactor = value;
					this.SendPropertyChanged("ActualConversionFactor");
					this.OnActualConversionFactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdealConversionFactor", DbType="Decimal(18,8) NOT NULL")]
		public decimal IdealConversionFactor
		{
			get
			{
				return this._IdealConversionFactor;
			}
			set
			{
				if ((this._IdealConversionFactor != value))
				{
					this.OnIdealConversionFactorChanging(value);
					this.SendPropertyChanging();
					this._IdealConversionFactor = value;
					this.SendPropertyChanged("IdealConversionFactor");
					this.OnIdealConversionFactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string StorageCode
		{
			get
			{
				return this._StorageCode;
			}
			set
			{
				if ((this._StorageCode != value))
				{
					this.OnStorageCodeChanging(value);
					this.SendPropertyChanging();
					this._StorageCode = value;
					this.SendPropertyChanged("StorageCode");
					this.OnStorageCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryCode", DbType="NVarChar(4) NOT NULL", CanBeNull=false)]
		public string CategoryCode
		{
			get
			{
				return this._CategoryCode;
			}
			set
			{
				if ((this._CategoryCode != value))
				{
					this.OnCategoryCodeChanging(value);
					this.SendPropertyChanging();
					this._CategoryCode = value;
					this.SendPropertyChanged("CategoryCode");
					this.OnCategoryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveCode", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string ActiveCode
		{
			get
			{
				return this._ActiveCode;
			}
			set
			{
				if ((this._ActiveCode != value))
				{
					this.OnActiveCodeChanging(value);
					this.SendPropertyChanging();
					this._ActiveCode = value;
					this.SendPropertyChanged("ActiveCode");
					this.OnActiveCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentProductNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ParentProductNumber
		{
			get
			{
				return this._ParentProductNumber;
			}
			set
			{
				if ((this._ParentProductNumber != value))
				{
					this.OnParentProductNumberChanging(value);
					this.SendPropertyChanging();
					this._ParentProductNumber = value;
					this.SendPropertyChanged("ParentProductNumber");
					this.OnParentProductNumberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HardeesProductWarehouse")]
	public partial class HardeesProductWarehouse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HardeesProductId;
		
		private int _HardeesWarehouseId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHardeesProductIdChanging(int value);
    partial void OnHardeesProductIdChanged();
    partial void OnHardeesWarehouseIdChanging(int value);
    partial void OnHardeesWarehouseIdChanged();
    #endregion
		
		public HardeesProductWarehouse()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardeesProductId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HardeesProductId
		{
			get
			{
				return this._HardeesProductId;
			}
			set
			{
				if ((this._HardeesProductId != value))
				{
					this.OnHardeesProductIdChanging(value);
					this.SendPropertyChanging();
					this._HardeesProductId = value;
					this.SendPropertyChanged("HardeesProductId");
					this.OnHardeesProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardeesWarehouseId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HardeesWarehouseId
		{
			get
			{
				return this._HardeesWarehouseId;
			}
			set
			{
				if ((this._HardeesWarehouseId != value))
				{
					this.OnHardeesWarehouseIdChanging(value);
					this.SendPropertyChanging();
					this._HardeesWarehouseId = value;
					this.SendPropertyChanged("HardeesWarehouseId");
					this.OnHardeesWarehouseIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HardeesWarehouse")]
	public partial class HardeesWarehouse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HardeesWarehouseId;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHardeesWarehouseIdChanging(int value);
    partial void OnHardeesWarehouseIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public HardeesWarehouse()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardeesWarehouseId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HardeesWarehouseId
		{
			get
			{
				return this._HardeesWarehouseId;
			}
			set
			{
				if ((this._HardeesWarehouseId != value))
				{
					this.OnHardeesWarehouseIdChanging(value);
					this.SendPropertyChanging();
					this._HardeesWarehouseId = value;
					this.SendPropertyChanged("HardeesWarehouseId");
					this.OnHardeesWarehouseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HardeesProductII")]
	public partial class HardeesProductII : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HardeesProductId;
		
		private int _WarehouseId;
		
		private string _ProductNumber;
		
		private string _Description;
		
		private string _UnitOfMeasure;
		
		private string _AltUnitOfMeasure;
		
		private decimal _ActualConversionFactor;
		
		private decimal _IdealConversionFactor;
		
		private string _StorageCode;
		
		private string _CategoryCode;
		
		private string _ActiveCode;
		
		private string _ParentProductNumber;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHardeesProductIdChanging(int value);
    partial void OnHardeesProductIdChanged();
    partial void OnWarehouseIdChanging(int value);
    partial void OnWarehouseIdChanged();
    partial void OnProductNumberChanging(string value);
    partial void OnProductNumberChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnUnitOfMeasureChanging(string value);
    partial void OnUnitOfMeasureChanged();
    partial void OnAltUnitOfMeasureChanging(string value);
    partial void OnAltUnitOfMeasureChanged();
    partial void OnActualConversionFactorChanging(decimal value);
    partial void OnActualConversionFactorChanged();
    partial void OnIdealConversionFactorChanging(decimal value);
    partial void OnIdealConversionFactorChanged();
    partial void OnStorageCodeChanging(string value);
    partial void OnStorageCodeChanged();
    partial void OnCategoryCodeChanging(string value);
    partial void OnCategoryCodeChanged();
    partial void OnActiveCodeChanging(string value);
    partial void OnActiveCodeChanged();
    partial void OnParentProductNumberChanging(string value);
    partial void OnParentProductNumberChanged();
    #endregion
		
		public HardeesProductII()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardeesProductId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HardeesProductId
		{
			get
			{
				return this._HardeesProductId;
			}
			set
			{
				if ((this._HardeesProductId != value))
				{
					this.OnHardeesProductIdChanging(value);
					this.SendPropertyChanging();
					this._HardeesProductId = value;
					this.SendPropertyChanged("HardeesProductId");
					this.OnHardeesProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseId", DbType="Int NOT NULL")]
		public int WarehouseId
		{
			get
			{
				return this._WarehouseId;
			}
			set
			{
				if ((this._WarehouseId != value))
				{
					this.OnWarehouseIdChanging(value);
					this.SendPropertyChanging();
					this._WarehouseId = value;
					this.SendPropertyChanged("WarehouseId");
					this.OnWarehouseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProductNumber
		{
			get
			{
				return this._ProductNumber;
			}
			set
			{
				if ((this._ProductNumber != value))
				{
					this.OnProductNumberChanging(value);
					this.SendPropertyChanging();
					this._ProductNumber = value;
					this.SendPropertyChanged("ProductNumber");
					this.OnProductNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitOfMeasure", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		public string UnitOfMeasure
		{
			get
			{
				return this._UnitOfMeasure;
			}
			set
			{
				if ((this._UnitOfMeasure != value))
				{
					this.OnUnitOfMeasureChanging(value);
					this.SendPropertyChanging();
					this._UnitOfMeasure = value;
					this.SendPropertyChanged("UnitOfMeasure");
					this.OnUnitOfMeasureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AltUnitOfMeasure", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		public string AltUnitOfMeasure
		{
			get
			{
				return this._AltUnitOfMeasure;
			}
			set
			{
				if ((this._AltUnitOfMeasure != value))
				{
					this.OnAltUnitOfMeasureChanging(value);
					this.SendPropertyChanging();
					this._AltUnitOfMeasure = value;
					this.SendPropertyChanged("AltUnitOfMeasure");
					this.OnAltUnitOfMeasureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualConversionFactor", DbType="Decimal(18,8) NOT NULL")]
		public decimal ActualConversionFactor
		{
			get
			{
				return this._ActualConversionFactor;
			}
			set
			{
				if ((this._ActualConversionFactor != value))
				{
					this.OnActualConversionFactorChanging(value);
					this.SendPropertyChanging();
					this._ActualConversionFactor = value;
					this.SendPropertyChanged("ActualConversionFactor");
					this.OnActualConversionFactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdealConversionFactor", DbType="Decimal(18,8) NOT NULL")]
		public decimal IdealConversionFactor
		{
			get
			{
				return this._IdealConversionFactor;
			}
			set
			{
				if ((this._IdealConversionFactor != value))
				{
					this.OnIdealConversionFactorChanging(value);
					this.SendPropertyChanging();
					this._IdealConversionFactor = value;
					this.SendPropertyChanged("IdealConversionFactor");
					this.OnIdealConversionFactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string StorageCode
		{
			get
			{
				return this._StorageCode;
			}
			set
			{
				if ((this._StorageCode != value))
				{
					this.OnStorageCodeChanging(value);
					this.SendPropertyChanging();
					this._StorageCode = value;
					this.SendPropertyChanged("StorageCode");
					this.OnStorageCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryCode", DbType="NVarChar(4) NOT NULL", CanBeNull=false)]
		public string CategoryCode
		{
			get
			{
				return this._CategoryCode;
			}
			set
			{
				if ((this._CategoryCode != value))
				{
					this.OnCategoryCodeChanging(value);
					this.SendPropertyChanging();
					this._CategoryCode = value;
					this.SendPropertyChanged("CategoryCode");
					this.OnCategoryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveCode", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string ActiveCode
		{
			get
			{
				return this._ActiveCode;
			}
			set
			{
				if ((this._ActiveCode != value))
				{
					this.OnActiveCodeChanging(value);
					this.SendPropertyChanging();
					this._ActiveCode = value;
					this.SendPropertyChanged("ActiveCode");
					this.OnActiveCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentProductNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ParentProductNumber
		{
			get
			{
				return this._ParentProductNumber;
			}
			set
			{
				if ((this._ParentProductNumber != value))
				{
					this.OnParentProductNumberChanging(value);
					this.SendPropertyChanging();
					this._ParentProductNumber = value;
					this.SendPropertyChanged("ParentProductNumber");
					this.OnParentProductNumberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RecipedItem")]
	public partial class RecipedItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RecipedItemCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRecipedItemCodeChanging(string value);
    partial void OnRecipedItemCodeChanged();
    #endregion
		
		public RecipedItem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecipedItemCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RecipedItemCode
		{
			get
			{
				return this._RecipedItemCode;
			}
			set
			{
				if ((this._RecipedItemCode != value))
				{
					this.OnRecipedItemCodeChanging(value);
					this.SendPropertyChanging();
					this._RecipedItemCode = value;
					this.SendPropertyChanged("RecipedItemCode");
					this.OnRecipedItemCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
